kwFn(1:1-1:3): fn
litId(1:4-1:10): myFunc
opLPar(1:11-1:12): (
litId(1:12-1:13): a
opColon(1:13-1:14): :
litId(1:15-1:18): int
opComma(1:18-1:19): ,
litId(1:20-1:21): b
opColonEq(1:22-1:24): :=
litIntDec(1:25-1:26): 1
opComma(1:26-1:27): ,
litId(1:28-1:29): c
opColonEq(1:30-1:32): :=
litIntDec(1:33-1:34): 2
opRPar(1:34-1:35): )
litId(1:36-1:39): int
opLBrace(1:40-1:41): {
kwReturn(2:3-2:9): return
litId(2:10-2:11): a
opPlus(2:12-2:13): +
litId(2:14-2:15): b
opPlus(2:16-2:17): +
litId(2:18-2:19): c
opRBrace(3:1-3:2): }
kwMain(5:1-5:5): main
opLBrace(5:6-5:7): {
litId(6:3-6:9): myFunc
opLPar(6:9-6:10): (
litIntDec(6:10-6:11): 1
opRPar(6:11-6:12): )
litId(7:3-7:9): myFunc
opLPar(7:9-7:10): (
litIntDec(7:10-7:11): 2
opComma(7:11-7:12): ,
litId(7:13-7:14): c
opColon(7:14-7:15): :
litIntDec(7:16-7:17): 3
opRPar(7:17-7:18): )
litId(8:3-8:9): myFunc
opLPar(8:9-8:10): (
litIntDec(8:10-8:11): 4
opComma(8:11-8:12): ,
litId(8:13-8:14): b
opColon(8:14-8:15): :
litIntDec(8:16-8:17): 5
opRPar(8:17-8:18): )
opRBrace(9:1-9:2): }
