kwMain(1:1-1:5): main
opLBrace(1:6-1:7): {
litId(2:3-2:6): val
opColonEq(2:7-2:9): :=
litStr(2:10-2:17): "value"
kwMatch(4:3-4:8): match
litId(4:9-4:12): val
opLBrace(4:13-4:14): {
kwCase(5:5-5:9): case
litStr(5:10-5:18): "value1"
opColon(5:18-5:19): :
opLBrace(5:20-5:21): {
litId(6:7-6:12): print
opLPar(6:12-6:13): (
litStr(6:13-6:25): "Value is 1"
opRPar(6:25-6:26): )
opRBrace(7:5-7:6): }
kwCase(8:5-8:9): case
litStr(8:10-8:18): "value2"
opComma(8:18-8:19): ,
litStr(8:20-8:28): "value3"
opColon(8:28-8:29): :
litId(9:7-9:12): print
opLPar(9:12-9:13): (
litStr(9:13-9:36): "Value might be 2 or 3"
opRPar(9:36-9:37): )
kwFallthrough(10:7-10:18): fallthrough
kwCase(11:5-11:9): case
litStr(11:10-11:18): "value4"
opColon(11:18-11:19): :
litId(12:7-12:12): print
opLPar(12:12-12:13): (
litStr(12:13-12:31): "Value might be 4"
opRPar(12:31-12:32): )
kwDefault(13:5-13:12): default
opColon(13:12-13:13): :
litId(14:7-14:12): print
opLPar(14:12-14:13): (
litStr(14:13-14:28): "Unknown value"
opRPar(14:28-14:29): )
opRBrace(15:3-15:4): }
opRBrace(16:1-16:2): }
