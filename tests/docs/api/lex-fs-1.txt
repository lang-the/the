KW_EXPORT: export
KW_ENUM: enum
LIT_ID: AccessMode
OP_LBRACE: {
LIT_ID: execute
OP_COMMA: ,
LIT_ID: existance
OP_COMMA: ,
LIT_ID: read
OP_COMMA: ,
LIT_ID: write
OP_RBRACE: }
KW_EXPORT: export
KW_ENUM: enum
LIT_ID: FileMode
OP_LBRACE: {
LIT_ID: execute
OP_COMMA: ,
LIT_ID: read
OP_COMMA: ,
LIT_ID: write
OP_RBRACE: }
KW_EXPORT: export
KW_CLASS: class
LIT_ID: File
OP_LBRACE: {
KW_PUB: pub
LIT_ID: eof
OP_COLON: :
LIT_ID: bool
KW_PUB: pub
LIT_ID: pos
OP_COLON: :
LIT_ID: int
KW_PUB: pub
LIT_ID: size
OP_COLON: :
LIT_ID: int
KW_STATIC: static
LIT_ID: open
OP_LPAR: (
LIT_ID: pathname
OP_COLON: :
LIT_ID: str
OP_COMMA: ,
LIT_ID: mode
OP_COLONEQ: :=
LIT_ID: FileMode
OP_DOT: .
LIT_ID: read
OP_RPAR: )
LIT_ID: File
KW_PUB: pub
KW_MUT: mut
LIT_ID: close
OP_LPAR: (
OP_RPAR: )
KW_THIS: this
KW_PUB: pub
KW_MUT: mut
LIT_ID: read
OP_LPAR: (
OP_RPAR: )
LIT_ID: byte
OP_LBRACK: [
OP_RBRACK: ]
KW_PUB: pub
KW_MUT: mut
LIT_ID: read
OP_LPAR: (
LIT_ID: n
OP_COLON: :
LIT_ID: int
OP_RPAR: )
LIT_ID: byte
OP_LBRACK: [
OP_RBRACK: ]
KW_PUB: pub
KW_MUT: mut
LIT_ID: seek
OP_LPAR: (
LIT_ID: pos
OP_COLON: :
LIT_ID: int
OP_RPAR: )
KW_THIS: this
KW_PUB: pub
KW_MUT: mut
LIT_ID: write
OP_LPAR: (
LIT_ID: data
OP_COLON: :
LIT_ID: byte
OP_LBRACK: [
OP_RBRACK: ]
OP_RPAR: )
KW_THIS: this
OP_RBRACE: }
KW_EXPORT: export
KW_FN: fn
LIT_ID: accessSync
OP_LPAR: (
LIT_ID: pathname
OP_COLON: :
LIT_ID: str
OP_COMMA: ,
LIT_ID: mode
OP_COLONEQ: :=
LIT_ID: AccessMode
OP_DOT: .
LIT_ID: existance
OP_RPAR: )
LIT_ID: int
KW_EXPORT: export
KW_FN: fn
LIT_ID: chmodSync
OP_LPAR: (
LIT_ID: pathname
OP_COLON: :
LIT_ID: str
OP_COMMA: ,
LIT_ID: mode
OP_COLON: :
LIT_ID: int
OP_RPAR: )
LIT_ID: int
KW_EXPORT: export
KW_FN: fn
LIT_ID: chownSync
OP_LPAR: (
LIT_ID: pathname
OP_COLON: :
LIT_ID: str
OP_COMMA: ,
LIT_ID: uid
OP_COLON: :
LIT_ID: int
OP_COMMA: ,
LIT_ID: gid
OP_COLON: :
LIT_ID: int
OP_RPAR: )
LIT_ID: int
KW_EXPORT: export
KW_FN: fn
LIT_ID: realpathSync
OP_LPAR: (
LIT_ID: pathname
OP_COLON: :
LIT_ID: str
OP_RPAR: )
LIT_ID: str
KW_EXPORT: export
KW_FN: fn
LIT_ID: rmSync
OP_LPAR: (
LIT_ID: pathname
OP_COLON: :
LIT_ID: str
OP_RPAR: )
LIT_ID: int
KW_EXPORT: export
KW_FN: fn
LIT_ID: rmdirSync
OP_LPAR: (
LIT_ID: pathname
OP_COLON: :
LIT_ID: str
OP_RPAR: )
LIT_ID: int
