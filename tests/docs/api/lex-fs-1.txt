kwExport(1:1-1:7): export
kwEnum(1:8-1:12): enum
litId(1:13-1:23): AccessMode
opLBrace(1:24-1:25): {
litId(2:3-2:10): execute
opComma(2:10-2:11): ,
litId(3:3-3:12): existance
opComma(3:12-3:13): ,
litId(4:3-4:7): read
opComma(4:7-4:8): ,
litId(5:3-5:8): write
opRBrace(6:1-6:2): }
kwExport(8:1-8:7): export
kwEnum(8:8-8:12): enum
litId(8:13-8:21): FileMode
opLBrace(8:22-8:23): {
litId(9:3-9:10): execute
opComma(9:10-9:11): ,
litId(10:3-10:7): read
opComma(10:7-10:8): ,
litId(11:3-11:8): write
opRBrace(12:1-12:2): }
kwExport(14:1-14:7): export
kwClass(14:8-14:13): class
litId(14:14-14:18): File
opLBrace(14:19-14:20): {
kwPub(15:3-15:6): pub
litId(15:7-15:10): eof
opColon(15:10-15:11): :
litId(15:12-15:16): bool
kwPub(16:3-16:6): pub
litId(16:7-16:10): pos
opColon(16:10-16:11): :
litId(16:12-16:15): int
kwPub(17:3-17:6): pub
litId(17:7-17:11): size
opColon(17:11-17:12): :
litId(17:13-17:16): int
kwStatic(19:3-19:9): static
kwFn(19:10-19:12): fn
litId(19:13-19:17): open
opLPar(19:18-19:19): (
litId(19:19-19:27): pathname
opColon(19:27-19:28): :
litId(19:29-19:32): str
opComma(19:32-19:33): ,
litId(19:34-19:38): mode
opColonEq(19:39-19:41): :=
litId(19:42-19:50): FileMode
opDot(19:50-19:51): .
litId(19:51-19:55): read
opRPar(19:55-19:56): )
litId(19:57-19:61): File
kwPub(20:3-20:6): pub
kwMut(20:7-20:10): mut
kwFn(20:11-20:13): fn
litId(20:14-20:19): close
opLPar(20:20-20:21): (
opRPar(20:21-20:22): )
kwThis(20:23-20:27): this
kwPub(21:3-21:6): pub
kwMut(21:7-21:10): mut
kwFn(21:11-21:13): fn
litId(21:14-21:18): read
opLPar(21:19-21:20): (
opRPar(21:20-21:21): )
litId(21:22-21:26): byte
opLBrack(21:26-21:27): [
opRBrack(21:27-21:28): ]
kwPub(22:3-22:6): pub
kwMut(22:7-22:10): mut
kwFn(22:11-22:13): fn
litId(22:14-22:18): read
opLPar(22:19-22:20): (
litId(22:20-22:21): n
opColon(22:21-22:22): :
litId(22:23-22:26): int
opRPar(22:26-22:27): )
litId(22:28-22:32): byte
opLBrack(22:32-22:33): [
opRBrack(22:33-22:34): ]
kwPub(23:3-23:6): pub
kwMut(23:7-23:10): mut
kwFn(23:11-23:13): fn
litId(23:14-23:18): seek
opLPar(23:19-23:20): (
litId(23:20-23:23): pos
opColon(23:23-23:24): :
litId(23:25-23:28): int
opRPar(23:28-23:29): )
kwThis(23:30-23:34): this
kwPub(24:3-24:6): pub
kwMut(24:7-24:10): mut
kwFn(24:11-24:13): fn
litId(24:14-24:19): write
opLPar(24:20-24:21): (
litId(24:21-24:25): data
opColon(24:25-24:26): :
litId(24:27-24:31): byte
opLBrack(24:31-24:32): [
opRBrack(24:32-24:33): ]
opRPar(24:33-24:34): )
kwThis(24:35-24:39): this
opRBrace(25:1-25:2): }
kwExport(27:1-27:7): export
kwFn(27:8-27:10): fn
litId(27:11-27:21): accessSync
opLPar(27:22-27:23): (
litId(27:23-27:31): pathname
opColon(27:31-27:32): :
litId(27:33-27:36): str
opComma(27:36-27:37): ,
litId(27:38-27:42): mode
opColonEq(27:43-27:45): :=
litId(27:46-27:56): AccessMode
opDot(27:56-27:57): .
litId(27:57-27:66): existance
opRPar(27:66-27:67): )
litId(27:68-27:71): int
kwExport(28:1-28:7): export
kwFn(28:8-28:10): fn
litId(28:11-28:20): chmodSync
opLPar(28:21-28:22): (
litId(28:22-28:30): pathname
opColon(28:30-28:31): :
litId(28:32-28:35): str
opComma(28:35-28:36): ,
litId(28:37-28:41): mode
opColon(28:41-28:42): :
litId(28:43-28:46): int
opRPar(28:46-28:47): )
litId(28:48-28:51): int
kwExport(29:1-29:7): export
kwFn(29:8-29:10): fn
litId(29:11-29:20): chownSync
opLPar(29:21-29:22): (
litId(29:22-29:30): pathname
opColon(29:30-29:31): :
litId(29:32-29:35): str
opComma(29:35-29:36): ,
litId(29:37-29:40): uid
opColon(29:40-29:41): :
litId(29:42-29:45): int
opComma(29:45-29:46): ,
litId(29:47-29:50): gid
opColon(29:50-29:51): :
litId(29:52-29:55): int
opRPar(29:55-29:56): )
litId(29:57-29:60): int
kwExport(30:1-30:7): export
kwFn(30:8-30:10): fn
litId(30:11-30:23): realpathSync
opLPar(30:24-30:25): (
litId(30:25-30:33): pathname
opColon(30:33-30:34): :
litId(30:35-30:38): str
opRPar(30:38-30:39): )
litId(30:40-30:43): str
kwExport(31:1-31:7): export
kwFn(31:8-31:10): fn
litId(31:11-31:17): rmSync
opLPar(31:18-31:19): (
litId(31:19-31:27): pathname
opColon(31:27-31:28): :
litId(31:29-31:32): str
opRPar(31:32-31:33): )
litId(31:34-31:37): int
kwExport(32:1-32:7): export
kwFn(32:8-32:10): fn
litId(32:11-32:20): rmdirSync
opLPar(32:21-32:22): (
litId(32:22-32:30): pathname
opColon(32:30-32:31): :
litId(32:32-32:35): str
opRPar(32:35-32:36): )
litId(32:37-32:40): int
