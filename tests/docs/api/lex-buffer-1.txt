KW_EXPORT: export
KW_CLASS: class
LIT_ID: Buffer
OP_LBRACE: {
KW_PUB: pub
LIT_ID: empty
OP_COLON: :
LIT_ID: bool
KW_PUB: pub
LIT_ID: len
OP_COLON: :
LIT_ID: int
KW_MUT: mut
KW_OP: op
OP_PLUSEQ: +=
OP_LPAR: (
LIT_ID: rhs
OP_COLON: :
LIT_ID: i8
OP_LBRACK: [
OP_RBRACK: ]
OP_RPAR: )
KW_THIS: this
KW_MUT: mut
KW_OP: op
OP_PLUSEQ: +=
OP_LPAR: (
LIT_ID: rhs
OP_COLON: :
LIT_ID: i16
OP_LBRACK: [
OP_RBRACK: ]
OP_RPAR: )
KW_THIS: this
KW_MUT: mut
KW_OP: op
OP_PLUSEQ: +=
OP_LPAR: (
LIT_ID: rhs
OP_COLON: :
LIT_ID: i32
OP_LBRACK: [
OP_RBRACK: ]
OP_RPAR: )
KW_THIS: this
KW_MUT: mut
KW_OP: op
OP_PLUSEQ: +=
OP_LPAR: (
LIT_ID: rhs
OP_COLON: :
LIT_ID: i64
OP_LBRACK: [
OP_RBRACK: ]
OP_RPAR: )
KW_THIS: this
KW_MUT: mut
KW_OP: op
OP_PLUSEQ: +=
OP_LPAR: (
LIT_ID: rhs
OP_COLON: :
LIT_ID: str
OP_RPAR: )
KW_THIS: this
KW_MUT: mut
KW_OP: op
OP_PLUSEQ: +=
OP_LPAR: (
LIT_ID: rhs
OP_COLON: :
LIT_ID: u8
OP_LBRACK: [
OP_RBRACK: ]
OP_RPAR: )
KW_THIS: this
KW_MUT: mut
KW_OP: op
OP_PLUSEQ: +=
OP_LPAR: (
LIT_ID: rhs
OP_COLON: :
LIT_ID: u16
OP_LBRACK: [
OP_RBRACK: ]
OP_RPAR: )
KW_THIS: this
KW_MUT: mut
KW_OP: op
OP_PLUSEQ: +=
OP_LPAR: (
LIT_ID: rhs
OP_COLON: :
LIT_ID: u32
OP_LBRACK: [
OP_RBRACK: ]
OP_RPAR: )
KW_THIS: this
KW_MUT: mut
KW_OP: op
OP_PLUSEQ: +=
OP_LPAR: (
LIT_ID: rhs
OP_COLON: :
LIT_ID: u64
OP_LBRACK: [
OP_RBRACK: ]
OP_RPAR: )
KW_THIS: this
KW_OP: op
OP_LBRACK: [
OP_RBRACK: ]
OP_LPAR: (
LIT_ID: i
OP_COLON: :
LIT_ID: int
OP_RPAR: )
LIT_ID: byte
KW_MUT: mut
KW_OP: op
OP_LBRACK: [
OP_RBRACK: ]
OP_LPAR: (
LIT_ID: i
OP_COLON: :
LIT_ID: int
OP_RPAR: )
KW_MUT: mut
LIT_ID: byte
KW_PUB: pub
KW_MUT: mut
LIT_ID: times
OP_LPAR: (
LIT_ID: b
OP_COLON: :
LIT_ID: byte
OP_COMMA: ,
LIT_ID: x
OP_COLON: :
LIT_ID: int
OP_RPAR: )
KW_THIS: this
KW_PUB: pub
LIT_ID: toArray
OP_LPAR: (
OP_RPAR: )
LIT_ID: byte
OP_LBRACK: [
OP_RBRACK: ]
OP_RBRACE: }
