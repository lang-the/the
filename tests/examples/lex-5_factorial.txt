kwFn(1:1-1:3): fn
litId(1:4-1:13): factorial
opLPar(1:14-1:15): (
litId(1:15-1:18): num
opColon(1:18-1:19): :
litId(1:20-1:23): int
opRPar(1:23-1:24): )
litId(1:25-1:28): int
opLBrace(1:29-1:30): {
kwReturn(2:3-2:9): return
litId(2:10-2:13): num
opLt(2:14-2:15): <
litIntDec(2:16-2:17): 2
opQn(2:18-2:19): ?
litIntDec(2:20-2:21): 1
opColon(2:22-2:23): :
litId(2:24-2:33): factorial
opLPar(2:33-2:34): (
litId(2:34-2:37): num
opMinus(2:38-2:39): -
litIntDec(2:40-2:41): 1
opRPar(2:41-2:42): )
opStar(2:43-2:44): *
litId(2:45-2:48): num
opRBrace(3:1-3:2): }
kwMain(5:1-5:5): main
opLBrace(5:6-5:7): {
litId(6:3-6:8): print
opLPar(6:8-6:9): (
litStr(6:9-6:27): "Factorial of 10:"
opComma(6:27-6:28): ,
litId(6:29-6:38): factorial
opLPar(6:38-6:39): (
litIntDec(6:39-6:41): 10
opRPar(6:41-6:42): )
opRPar(6:42-6:43): )
opRBrace(7:1-7:2): }
