kwImport(1:1-1:7): import
litId(1:8-1:12): swap
kwFrom(1:13-1:17): from
litId(1:18-1:23): utils
kwFn(3:1-3:3): fn
litId(3:4-3:13): quicksort
opLPar(3:14-3:15): (
kwMut(3:15-3:18): mut
litId(3:19-3:22): arr
opColon(3:22-3:23): :
litId(3:24-3:27): int
opLBrack(3:27-3:28): [
opRBrack(3:28-3:29): ]
opComma(3:29-3:30): ,
litId(3:31-3:36): begin
opColonEq(3:37-3:39): :=
litIntDec(3:40-3:41): 0
opComma(3:41-3:42): ,
litId(3:43-3:46): end
opColonEq(3:47-3:49): :=
litId(3:50-3:53): arr
opDot(3:53-3:54): .
litId(3:54-3:57): len
opRPar(3:57-3:58): )
opLBrace(3:59-3:60): {
kwIf(4:3-4:5): if
litId(4:6-4:9): arr
opDot(4:9-4:10): .
litId(4:10-4:13): len
opLt(4:14-4:15): <
litIntDec(4:16-4:17): 2
opOrOr(4:18-4:20): ||
litId(4:21-4:26): begin
opGtEq(4:27-4:29): >=
litId(4:30-4:33): end
opLBrace(4:34-4:35): {
kwReturn(5:5-5:11): return
opRBrace(6:3-6:4): }
kwMut(8:3-8:6): mut
litId(8:7-8:8): i
opColonEq(8:9-8:11): :=
litId(8:12-8:17): begin
kwLoop(10:3-10:7): loop
litId(10:8-10:9): j
kwIn(10:10-10:12): in
litId(10:13-10:18): begin
opPlus(10:19-10:20): +
litIntDec(10:21-10:22): 1
opDotDot(10:23-10:25): ..
litId(10:26-10:29): end
opPlus(10:30-10:31): +
litIntDec(10:32-10:33): 1
opLBrace(10:34-10:35): {
kwIf(11:5-11:7): if
litId(11:8-11:11): arr
opLBrack(11:11-11:12): [
litId(11:12-11:13): j
opRBrack(11:13-11:14): ]
opLtEq(11:15-11:17): <=
litId(11:18-11:21): arr
opLBrack(11:21-11:22): [
litId(11:22-11:27): begin
opRBrack(11:27-11:28): ]
opLBrace(11:29-11:30): {
litId(12:7-12:8): i
opPlusPlus(12:8-12:10): ++
litId(13:7-13:11): swap
opLPar(13:11-13:12): (
litId(13:12-13:15): arr
opLBrack(13:15-13:16): [
litId(13:16-13:17): i
opRBrack(13:17-13:18): ]
opComma(13:18-13:19): ,
litId(13:20-13:23): arr
opLBrack(13:23-13:24): [
litId(13:24-13:25): j
opRBrack(13:25-13:26): ]
opRPar(13:26-13:27): )
opRBrace(14:5-14:6): }
opRBrace(15:3-15:4): }
litId(17:3-17:7): swap
opLPar(17:7-17:8): (
litId(17:8-17:11): arr
opLBrack(17:11-17:12): [
litId(17:12-17:17): begin
opRBrack(17:17-17:18): ]
opComma(17:18-17:19): ,
litId(17:20-17:23): arr
opLBrack(17:23-17:24): [
litId(17:24-17:25): i
opRBrack(17:25-17:26): ]
opRPar(17:26-17:27): )
litId(18:3-18:12): quicksort
opLPar(18:12-18:13): (
litId(18:13-18:16): arr
opComma(18:16-18:17): ,
litId(18:18-18:23): begin
opComma(18:23-18:24): ,
litId(18:25-18:26): i
opMinus(18:27-18:28): -
litIntDec(18:29-18:30): 1
opRPar(18:30-18:31): )
litId(19:3-19:12): quicksort
opLPar(19:12-19:13): (
litId(19:13-19:16): arr
opComma(19:16-19:17): ,
litId(19:18-19:19): i
opPlus(19:20-19:21): +
litIntDec(19:22-19:23): 1
opComma(19:23-19:24): ,
litId(19:25-19:28): end
opRPar(19:28-19:29): )
opRBrace(20:1-20:2): }
kwMain(22:1-22:5): main
opLBrace(22:6-22:7): {
kwMut(23:3-23:6): mut
litId(23:7-23:10): arr
opColonEq(23:11-23:13): :=
opLBrack(23:14-23:15): [
litIntDec(23:15-23:16): 3
opComma(23:16-23:17): ,
litIntDec(23:18-23:19): 4
opComma(23:19-23:20): ,
litIntDec(23:21-23:22): 1
opComma(23:22-23:23): ,
litIntDec(23:24-23:25): 8
opComma(23:25-23:26): ,
litIntDec(23:27-23:28): 6
opComma(23:28-23:29): ,
litIntDec(23:30-23:31): 7
opComma(23:31-23:32): ,
litIntDec(23:33-23:34): 5
opComma(23:34-23:35): ,
litIntDec(23:36-23:38): 10
opComma(23:38-23:39): ,
litIntDec(23:40-23:41): 9
opComma(23:41-23:42): ,
litIntDec(23:43-23:44): 2
opRBrack(23:44-23:45): ]
litId(25:3-25:8): print
opLPar(25:8-25:9): (
litStr(25:9-25:34): "Array before quicksort:"
opComma(25:34-25:35): ,
litId(25:36-25:39): arr
opRPar(25:39-25:40): )
litId(26:3-26:12): quicksort
opLPar(26:12-26:13): (
litId(26:13-26:16): arr
opRPar(26:16-26:17): )
litId(27:3-27:8): print
opLPar(27:8-27:9): (
litStr(27:9-27:33): "Array after quicksort:"
opComma(27:33-27:34): ,
litId(27:35-27:38): arr
opRPar(27:38-27:39): )
opRBrace(28:1-28:2): }
