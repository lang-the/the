#!/bin/sh

CR="$(printf "\r")"
SPACE="$(printf " ")"
TAB="$(printf "\t")"

base_dir="$(dirname -- "$0")"
errors=""

log_error () {
  loc="$1:"

  if [ "$#" -gt 2 ]; then
    loc="$loc$(($3 + 1)):"
  fi

  error="$loc $2"

  if [ -z "$errors" ]; then
    errors="$error"
  else
    errors="$errors\n$error"
  fi
}

process () {
  filepath="$1"
  last_line=""
  i=0

  while IFS= read -r line || [ -n "$line" ]; do
    line_len="${#line}"

    if [ "$line_len" -ge 80 ]; then
      log_error "$filepath" "line length should not exceed 80 characters" $i
    fi

    if [ "$line_len" -ge 1 ]; then
      first_char="${line%"${line#?}"}"
      last_char="${line#"${line%?}"}"

      if [ "$last_char" = "$CR" ]; then
        log_error "$filepath" "line terminator should be LF" $i
      fi

      if [ "$first_char" = "$TAB" ]; then
        log_error "$filepath" "line should not start with tab" $i
      fi

      if [ "$last_char" = "$TAB" ] || [ "$last_char" = "$SPACE" ]; then
        log_error "$filepath" "line should not end with whitespace" $i
      fi

      if [ "$first_char" = "$SPACE" ]; then
        tmp="${line#?}"
        j=1

        while [ -n "$tmp" ]; do
          next_char="${tmp%"${tmp#?}"}"

          if [ "$next_char" != "$SPACE" ]; then
            break
          fi

          tmp="${tmp#?}"
          j=$((j + 1))
        done

        if [ $((j % 2)) -ne 0 ]; then
          log_error "$filepath" "line indentation should be 2 spaces" $i
        fi
      fi
    fi

    last_line="$line"
    i=$((i + 1))
  done < "$1"

  if [ $i -ne 0 ] && [ "$last_line" = "" ]; then
    log_error "$filepath" "file end should have only one line break" $i
  fi
}

process_dir () {
  for entry in "$1"/*; do
    if [ ! -f "$entry" ]; then
      process_dir "$entry"
      continue
    elif [ "$(basename -- "$entry")" = "LICENSE.md" ]; then
      continue
    fi

    process "$entry"
  done
}

process_dir "$(cd "$base_dir/.." && pwd -P)"
process_dir "$(cd "$base_dir/../.github" && pwd -P)"

if [ -n "$errors" ]; then
  echo "$errors"
  exit 1
fi
