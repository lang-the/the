obj Node {
  left: Tree?
  right: Tree?
  val: int
}

class Tree {
  priv mut _nodes: Node[]

  init (nodes: Node...) {
    this._nodes = nodes
  }

  mut add (node: Node) this {
    this._nodes.push(node)
    return this
  }

  mut remove (at: int) this {
    this._nodes.remove(at)
    return this
  }
}

main {
  node1 := Node{ val: 1 }
  node2 := Node{ val: 2 }
  node3 := Node{ left: node1, right: node2, val: 3 }
  node4 := Node{ val: 4 }
  node5 := Node{ val: 5 }

  mut tree := new Tree(node3, node4)

  tree.add(node5)
  tree.add({ val: 6 })
  tree.remove(1)
  tree.remove(2)
}
